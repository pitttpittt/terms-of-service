// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: TickOptionComputation.proto
// Protobuf Java Version: 4.29.3

package com.ib.client.protobuf;

public final class TickOptionComputationProto {
  private TickOptionComputationProto() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      TickOptionComputationProto.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TickOptionComputationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.TickOptionComputation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 reqId = 1;</code>
     * @return Whether the reqId field is set.
     */
    boolean hasReqId();
    /**
     * <code>optional int32 reqId = 1;</code>
     * @return The reqId.
     */
    int getReqId();

    /**
     * <code>optional int32 tickType = 2;</code>
     * @return Whether the tickType field is set.
     */
    boolean hasTickType();
    /**
     * <code>optional int32 tickType = 2;</code>
     * @return The tickType.
     */
    int getTickType();

    /**
     * <code>optional int32 tickAttrib = 3;</code>
     * @return Whether the tickAttrib field is set.
     */
    boolean hasTickAttrib();
    /**
     * <code>optional int32 tickAttrib = 3;</code>
     * @return The tickAttrib.
     */
    int getTickAttrib();

    /**
     * <code>optional double impliedVol = 4;</code>
     * @return Whether the impliedVol field is set.
     */
    boolean hasImpliedVol();
    /**
     * <code>optional double impliedVol = 4;</code>
     * @return The impliedVol.
     */
    double getImpliedVol();

    /**
     * <code>optional double delta = 5;</code>
     * @return Whether the delta field is set.
     */
    boolean hasDelta();
    /**
     * <code>optional double delta = 5;</code>
     * @return The delta.
     */
    double getDelta();

    /**
     * <code>optional double optPrice = 6;</code>
     * @return Whether the optPrice field is set.
     */
    boolean hasOptPrice();
    /**
     * <code>optional double optPrice = 6;</code>
     * @return The optPrice.
     */
    double getOptPrice();

    /**
     * <code>optional double pvDividend = 7;</code>
     * @return Whether the pvDividend field is set.
     */
    boolean hasPvDividend();
    /**
     * <code>optional double pvDividend = 7;</code>
     * @return The pvDividend.
     */
    double getPvDividend();

    /**
     * <code>optional double gamma = 8;</code>
     * @return Whether the gamma field is set.
     */
    boolean hasGamma();
    /**
     * <code>optional double gamma = 8;</code>
     * @return The gamma.
     */
    double getGamma();

    /**
     * <code>optional double vega = 9;</code>
     * @return Whether the vega field is set.
     */
    boolean hasVega();
    /**
     * <code>optional double vega = 9;</code>
     * @return The vega.
     */
    double getVega();

    /**
     * <code>optional double theta = 10;</code>
     * @return Whether the theta field is set.
     */
    boolean hasTheta();
    /**
     * <code>optional double theta = 10;</code>
     * @return The theta.
     */
    double getTheta();

    /**
     * <code>optional double undPrice = 11;</code>
     * @return Whether the undPrice field is set.
     */
    boolean hasUndPrice();
    /**
     * <code>optional double undPrice = 11;</code>
     * @return The undPrice.
     */
    double getUndPrice();
  }
  /**
   * Protobuf type {@code protobuf.TickOptionComputation}
   */
  public static final class TickOptionComputation extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protobuf.TickOptionComputation)
      TickOptionComputationOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        TickOptionComputation.class.getName());
    }
    // Use TickOptionComputation.newBuilder() to construct.
    private TickOptionComputation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private TickOptionComputation() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ib.client.protobuf.TickOptionComputationProto.internal_static_protobuf_TickOptionComputation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ib.client.protobuf.TickOptionComputationProto.internal_static_protobuf_TickOptionComputation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation.class, com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation.Builder.class);
    }

    private int bitField0_;
    public static final int REQID_FIELD_NUMBER = 1;
    private int reqId_ = 0;
    /**
     * <code>optional int32 reqId = 1;</code>
     * @return Whether the reqId field is set.
     */
    @java.lang.Override
    public boolean hasReqId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 reqId = 1;</code>
     * @return The reqId.
     */
    @java.lang.Override
    public int getReqId() {
      return reqId_;
    }

    public static final int TICKTYPE_FIELD_NUMBER = 2;
    private int tickType_ = 0;
    /**
     * <code>optional int32 tickType = 2;</code>
     * @return Whether the tickType field is set.
     */
    @java.lang.Override
    public boolean hasTickType() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional int32 tickType = 2;</code>
     * @return The tickType.
     */
    @java.lang.Override
    public int getTickType() {
      return tickType_;
    }

    public static final int TICKATTRIB_FIELD_NUMBER = 3;
    private int tickAttrib_ = 0;
    /**
     * <code>optional int32 tickAttrib = 3;</code>
     * @return Whether the tickAttrib field is set.
     */
    @java.lang.Override
    public boolean hasTickAttrib() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional int32 tickAttrib = 3;</code>
     * @return The tickAttrib.
     */
    @java.lang.Override
    public int getTickAttrib() {
      return tickAttrib_;
    }

    public static final int IMPLIEDVOL_FIELD_NUMBER = 4;
    private double impliedVol_ = 0D;
    /**
     * <code>optional double impliedVol = 4;</code>
     * @return Whether the impliedVol field is set.
     */
    @java.lang.Override
    public boolean hasImpliedVol() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional double impliedVol = 4;</code>
     * @return The impliedVol.
     */
    @java.lang.Override
    public double getImpliedVol() {
      return impliedVol_;
    }

    public static final int DELTA_FIELD_NUMBER = 5;
    private double delta_ = 0D;
    /**
     * <code>optional double delta = 5;</code>
     * @return Whether the delta field is set.
     */
    @java.lang.Override
    public boolean hasDelta() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional double delta = 5;</code>
     * @return The delta.
     */
    @java.lang.Override
    public double getDelta() {
      return delta_;
    }

    public static final int OPTPRICE_FIELD_NUMBER = 6;
    private double optPrice_ = 0D;
    /**
     * <code>optional double optPrice = 6;</code>
     * @return Whether the optPrice field is set.
     */
    @java.lang.Override
    public boolean hasOptPrice() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional double optPrice = 6;</code>
     * @return The optPrice.
     */
    @java.lang.Override
    public double getOptPrice() {
      return optPrice_;
    }

    public static final int PVDIVIDEND_FIELD_NUMBER = 7;
    private double pvDividend_ = 0D;
    /**
     * <code>optional double pvDividend = 7;</code>
     * @return Whether the pvDividend field is set.
     */
    @java.lang.Override
    public boolean hasPvDividend() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional double pvDividend = 7;</code>
     * @return The pvDividend.
     */
    @java.lang.Override
    public double getPvDividend() {
      return pvDividend_;
    }

    public static final int GAMMA_FIELD_NUMBER = 8;
    private double gamma_ = 0D;
    /**
     * <code>optional double gamma = 8;</code>
     * @return Whether the gamma field is set.
     */
    @java.lang.Override
    public boolean hasGamma() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional double gamma = 8;</code>
     * @return The gamma.
     */
    @java.lang.Override
    public double getGamma() {
      return gamma_;
    }

    public static final int VEGA_FIELD_NUMBER = 9;
    private double vega_ = 0D;
    /**
     * <code>optional double vega = 9;</code>
     * @return Whether the vega field is set.
     */
    @java.lang.Override
    public boolean hasVega() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional double vega = 9;</code>
     * @return The vega.
     */
    @java.lang.Override
    public double getVega() {
      return vega_;
    }

    public static final int THETA_FIELD_NUMBER = 10;
    private double theta_ = 0D;
    /**
     * <code>optional double theta = 10;</code>
     * @return Whether the theta field is set.
     */
    @java.lang.Override
    public boolean hasTheta() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional double theta = 10;</code>
     * @return The theta.
     */
    @java.lang.Override
    public double getTheta() {
      return theta_;
    }

    public static final int UNDPRICE_FIELD_NUMBER = 11;
    private double undPrice_ = 0D;
    /**
     * <code>optional double undPrice = 11;</code>
     * @return Whether the undPrice field is set.
     */
    @java.lang.Override
    public boolean hasUndPrice() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>optional double undPrice = 11;</code>
     * @return The undPrice.
     */
    @java.lang.Override
    public double getUndPrice() {
      return undPrice_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, reqId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, tickType_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(3, tickAttrib_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeDouble(4, impliedVol_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeDouble(5, delta_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeDouble(6, optPrice_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeDouble(7, pvDividend_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeDouble(8, gamma_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeDouble(9, vega_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeDouble(10, theta_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeDouble(11, undPrice_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, reqId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, tickType_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, tickAttrib_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, impliedVol_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, delta_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, optPrice_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, pvDividend_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, gamma_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, vega_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, theta_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, undPrice_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation)) {
        return super.equals(obj);
      }
      com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation other = (com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation) obj;

      if (hasReqId() != other.hasReqId()) return false;
      if (hasReqId()) {
        if (getReqId()
            != other.getReqId()) return false;
      }
      if (hasTickType() != other.hasTickType()) return false;
      if (hasTickType()) {
        if (getTickType()
            != other.getTickType()) return false;
      }
      if (hasTickAttrib() != other.hasTickAttrib()) return false;
      if (hasTickAttrib()) {
        if (getTickAttrib()
            != other.getTickAttrib()) return false;
      }
      if (hasImpliedVol() != other.hasImpliedVol()) return false;
      if (hasImpliedVol()) {
        if (java.lang.Double.doubleToLongBits(getImpliedVol())
            != java.lang.Double.doubleToLongBits(
                other.getImpliedVol())) return false;
      }
      if (hasDelta() != other.hasDelta()) return false;
      if (hasDelta()) {
        if (java.lang.Double.doubleToLongBits(getDelta())
            != java.lang.Double.doubleToLongBits(
                other.getDelta())) return false;
      }
      if (hasOptPrice() != other.hasOptPrice()) return false;
      if (hasOptPrice()) {
        if (java.lang.Double.doubleToLongBits(getOptPrice())
            != java.lang.Double.doubleToLongBits(
                other.getOptPrice())) return false;
      }
      if (hasPvDividend() != other.hasPvDividend()) return false;
      if (hasPvDividend()) {
        if (java.lang.Double.doubleToLongBits(getPvDividend())
            != java.lang.Double.doubleToLongBits(
                other.getPvDividend())) return false;
      }
      if (hasGamma() != other.hasGamma()) return false;
      if (hasGamma()) {
        if (java.lang.Double.doubleToLongBits(getGamma())
            != java.lang.Double.doubleToLongBits(
                other.getGamma())) return false;
      }
      if (hasVega() != other.hasVega()) return false;
      if (hasVega()) {
        if (java.lang.Double.doubleToLongBits(getVega())
            != java.lang.Double.doubleToLongBits(
                other.getVega())) return false;
      }
      if (hasTheta() != other.hasTheta()) return false;
      if (hasTheta()) {
        if (java.lang.Double.doubleToLongBits(getTheta())
            != java.lang.Double.doubleToLongBits(
                other.getTheta())) return false;
      }
      if (hasUndPrice() != other.hasUndPrice()) return false;
      if (hasUndPrice()) {
        if (java.lang.Double.doubleToLongBits(getUndPrice())
            != java.lang.Double.doubleToLongBits(
                other.getUndPrice())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasReqId()) {
        hash = (37 * hash) + REQID_FIELD_NUMBER;
        hash = (53 * hash) + getReqId();
      }
      if (hasTickType()) {
        hash = (37 * hash) + TICKTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTickType();
      }
      if (hasTickAttrib()) {
        hash = (37 * hash) + TICKATTRIB_FIELD_NUMBER;
        hash = (53 * hash) + getTickAttrib();
      }
      if (hasImpliedVol()) {
        hash = (37 * hash) + IMPLIEDVOL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getImpliedVol()));
      }
      if (hasDelta()) {
        hash = (37 * hash) + DELTA_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDelta()));
      }
      if (hasOptPrice()) {
        hash = (37 * hash) + OPTPRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getOptPrice()));
      }
      if (hasPvDividend()) {
        hash = (37 * hash) + PVDIVIDEND_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPvDividend()));
      }
      if (hasGamma()) {
        hash = (37 * hash) + GAMMA_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getGamma()));
      }
      if (hasVega()) {
        hash = (37 * hash) + VEGA_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getVega()));
      }
      if (hasTheta()) {
        hash = (37 * hash) + THETA_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTheta()));
      }
      if (hasUndPrice()) {
        hash = (37 * hash) + UNDPRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getUndPrice()));
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.TickOptionComputation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.TickOptionComputation)
        com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ib.client.protobuf.TickOptionComputationProto.internal_static_protobuf_TickOptionComputation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ib.client.protobuf.TickOptionComputationProto.internal_static_protobuf_TickOptionComputation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation.class, com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation.Builder.class);
      }

      // Construct using com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        reqId_ = 0;
        tickType_ = 0;
        tickAttrib_ = 0;
        impliedVol_ = 0D;
        delta_ = 0D;
        optPrice_ = 0D;
        pvDividend_ = 0D;
        gamma_ = 0D;
        vega_ = 0D;
        theta_ = 0D;
        undPrice_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ib.client.protobuf.TickOptionComputationProto.internal_static_protobuf_TickOptionComputation_descriptor;
      }

      @java.lang.Override
      public com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation getDefaultInstanceForType() {
        return com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation.getDefaultInstance();
      }

      @java.lang.Override
      public com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation build() {
        com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation buildPartial() {
        com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation result = new com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.reqId_ = reqId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.tickType_ = tickType_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.tickAttrib_ = tickAttrib_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.impliedVol_ = impliedVol_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.delta_ = delta_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.optPrice_ = optPrice_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.pvDividend_ = pvDividend_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.gamma_ = gamma_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.vega_ = vega_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.theta_ = theta_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.undPrice_ = undPrice_;
          to_bitField0_ |= 0x00000400;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation) {
          return mergeFrom((com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation other) {
        if (other == com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation.getDefaultInstance()) return this;
        if (other.hasReqId()) {
          setReqId(other.getReqId());
        }
        if (other.hasTickType()) {
          setTickType(other.getTickType());
        }
        if (other.hasTickAttrib()) {
          setTickAttrib(other.getTickAttrib());
        }
        if (other.hasImpliedVol()) {
          setImpliedVol(other.getImpliedVol());
        }
        if (other.hasDelta()) {
          setDelta(other.getDelta());
        }
        if (other.hasOptPrice()) {
          setOptPrice(other.getOptPrice());
        }
        if (other.hasPvDividend()) {
          setPvDividend(other.getPvDividend());
        }
        if (other.hasGamma()) {
          setGamma(other.getGamma());
        }
        if (other.hasVega()) {
          setVega(other.getVega());
        }
        if (other.hasTheta()) {
          setTheta(other.getTheta());
        }
        if (other.hasUndPrice()) {
          setUndPrice(other.getUndPrice());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                reqId_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                tickType_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                tickAttrib_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 33: {
                impliedVol_ = input.readDouble();
                bitField0_ |= 0x00000008;
                break;
              } // case 33
              case 41: {
                delta_ = input.readDouble();
                bitField0_ |= 0x00000010;
                break;
              } // case 41
              case 49: {
                optPrice_ = input.readDouble();
                bitField0_ |= 0x00000020;
                break;
              } // case 49
              case 57: {
                pvDividend_ = input.readDouble();
                bitField0_ |= 0x00000040;
                break;
              } // case 57
              case 65: {
                gamma_ = input.readDouble();
                bitField0_ |= 0x00000080;
                break;
              } // case 65
              case 73: {
                vega_ = input.readDouble();
                bitField0_ |= 0x00000100;
                break;
              } // case 73
              case 81: {
                theta_ = input.readDouble();
                bitField0_ |= 0x00000200;
                break;
              } // case 81
              case 89: {
                undPrice_ = input.readDouble();
                bitField0_ |= 0x00000400;
                break;
              } // case 89
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int reqId_ ;
      /**
       * <code>optional int32 reqId = 1;</code>
       * @return Whether the reqId field is set.
       */
      @java.lang.Override
      public boolean hasReqId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 reqId = 1;</code>
       * @return The reqId.
       */
      @java.lang.Override
      public int getReqId() {
        return reqId_;
      }
      /**
       * <code>optional int32 reqId = 1;</code>
       * @param value The reqId to set.
       * @return This builder for chaining.
       */
      public Builder setReqId(int value) {

        reqId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 reqId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearReqId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        reqId_ = 0;
        onChanged();
        return this;
      }

      private int tickType_ ;
      /**
       * <code>optional int32 tickType = 2;</code>
       * @return Whether the tickType field is set.
       */
      @java.lang.Override
      public boolean hasTickType() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 tickType = 2;</code>
       * @return The tickType.
       */
      @java.lang.Override
      public int getTickType() {
        return tickType_;
      }
      /**
       * <code>optional int32 tickType = 2;</code>
       * @param value The tickType to set.
       * @return This builder for chaining.
       */
      public Builder setTickType(int value) {

        tickType_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tickType = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTickType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tickType_ = 0;
        onChanged();
        return this;
      }

      private int tickAttrib_ ;
      /**
       * <code>optional int32 tickAttrib = 3;</code>
       * @return Whether the tickAttrib field is set.
       */
      @java.lang.Override
      public boolean hasTickAttrib() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional int32 tickAttrib = 3;</code>
       * @return The tickAttrib.
       */
      @java.lang.Override
      public int getTickAttrib() {
        return tickAttrib_;
      }
      /**
       * <code>optional int32 tickAttrib = 3;</code>
       * @param value The tickAttrib to set.
       * @return This builder for chaining.
       */
      public Builder setTickAttrib(int value) {

        tickAttrib_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tickAttrib = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTickAttrib() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tickAttrib_ = 0;
        onChanged();
        return this;
      }

      private double impliedVol_ ;
      /**
       * <code>optional double impliedVol = 4;</code>
       * @return Whether the impliedVol field is set.
       */
      @java.lang.Override
      public boolean hasImpliedVol() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional double impliedVol = 4;</code>
       * @return The impliedVol.
       */
      @java.lang.Override
      public double getImpliedVol() {
        return impliedVol_;
      }
      /**
       * <code>optional double impliedVol = 4;</code>
       * @param value The impliedVol to set.
       * @return This builder for chaining.
       */
      public Builder setImpliedVol(double value) {

        impliedVol_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional double impliedVol = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearImpliedVol() {
        bitField0_ = (bitField0_ & ~0x00000008);
        impliedVol_ = 0D;
        onChanged();
        return this;
      }

      private double delta_ ;
      /**
       * <code>optional double delta = 5;</code>
       * @return Whether the delta field is set.
       */
      @java.lang.Override
      public boolean hasDelta() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional double delta = 5;</code>
       * @return The delta.
       */
      @java.lang.Override
      public double getDelta() {
        return delta_;
      }
      /**
       * <code>optional double delta = 5;</code>
       * @param value The delta to set.
       * @return This builder for chaining.
       */
      public Builder setDelta(double value) {

        delta_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional double delta = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDelta() {
        bitField0_ = (bitField0_ & ~0x00000010);
        delta_ = 0D;
        onChanged();
        return this;
      }

      private double optPrice_ ;
      /**
       * <code>optional double optPrice = 6;</code>
       * @return Whether the optPrice field is set.
       */
      @java.lang.Override
      public boolean hasOptPrice() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional double optPrice = 6;</code>
       * @return The optPrice.
       */
      @java.lang.Override
      public double getOptPrice() {
        return optPrice_;
      }
      /**
       * <code>optional double optPrice = 6;</code>
       * @param value The optPrice to set.
       * @return This builder for chaining.
       */
      public Builder setOptPrice(double value) {

        optPrice_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional double optPrice = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearOptPrice() {
        bitField0_ = (bitField0_ & ~0x00000020);
        optPrice_ = 0D;
        onChanged();
        return this;
      }

      private double pvDividend_ ;
      /**
       * <code>optional double pvDividend = 7;</code>
       * @return Whether the pvDividend field is set.
       */
      @java.lang.Override
      public boolean hasPvDividend() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional double pvDividend = 7;</code>
       * @return The pvDividend.
       */
      @java.lang.Override
      public double getPvDividend() {
        return pvDividend_;
      }
      /**
       * <code>optional double pvDividend = 7;</code>
       * @param value The pvDividend to set.
       * @return This builder for chaining.
       */
      public Builder setPvDividend(double value) {

        pvDividend_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional double pvDividend = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearPvDividend() {
        bitField0_ = (bitField0_ & ~0x00000040);
        pvDividend_ = 0D;
        onChanged();
        return this;
      }

      private double gamma_ ;
      /**
       * <code>optional double gamma = 8;</code>
       * @return Whether the gamma field is set.
       */
      @java.lang.Override
      public boolean hasGamma() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional double gamma = 8;</code>
       * @return The gamma.
       */
      @java.lang.Override
      public double getGamma() {
        return gamma_;
      }
      /**
       * <code>optional double gamma = 8;</code>
       * @param value The gamma to set.
       * @return This builder for chaining.
       */
      public Builder setGamma(double value) {

        gamma_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional double gamma = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearGamma() {
        bitField0_ = (bitField0_ & ~0x00000080);
        gamma_ = 0D;
        onChanged();
        return this;
      }

      private double vega_ ;
      /**
       * <code>optional double vega = 9;</code>
       * @return Whether the vega field is set.
       */
      @java.lang.Override
      public boolean hasVega() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional double vega = 9;</code>
       * @return The vega.
       */
      @java.lang.Override
      public double getVega() {
        return vega_;
      }
      /**
       * <code>optional double vega = 9;</code>
       * @param value The vega to set.
       * @return This builder for chaining.
       */
      public Builder setVega(double value) {

        vega_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>optional double vega = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearVega() {
        bitField0_ = (bitField0_ & ~0x00000100);
        vega_ = 0D;
        onChanged();
        return this;
      }

      private double theta_ ;
      /**
       * <code>optional double theta = 10;</code>
       * @return Whether the theta field is set.
       */
      @java.lang.Override
      public boolean hasTheta() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional double theta = 10;</code>
       * @return The theta.
       */
      @java.lang.Override
      public double getTheta() {
        return theta_;
      }
      /**
       * <code>optional double theta = 10;</code>
       * @param value The theta to set.
       * @return This builder for chaining.
       */
      public Builder setTheta(double value) {

        theta_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>optional double theta = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearTheta() {
        bitField0_ = (bitField0_ & ~0x00000200);
        theta_ = 0D;
        onChanged();
        return this;
      }

      private double undPrice_ ;
      /**
       * <code>optional double undPrice = 11;</code>
       * @return Whether the undPrice field is set.
       */
      @java.lang.Override
      public boolean hasUndPrice() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>optional double undPrice = 11;</code>
       * @return The undPrice.
       */
      @java.lang.Override
      public double getUndPrice() {
        return undPrice_;
      }
      /**
       * <code>optional double undPrice = 11;</code>
       * @param value The undPrice to set.
       * @return This builder for chaining.
       */
      public Builder setUndPrice(double value) {

        undPrice_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>optional double undPrice = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearUndPrice() {
        bitField0_ = (bitField0_ & ~0x00000400);
        undPrice_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.TickOptionComputation)
    }

    // @@protoc_insertion_point(class_scope:protobuf.TickOptionComputation)
    private static final com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation();
    }

    public static com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TickOptionComputation>
        PARSER = new com.google.protobuf.AbstractParser<TickOptionComputation>() {
      @java.lang.Override
      public TickOptionComputation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TickOptionComputation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TickOptionComputation> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.ib.client.protobuf.TickOptionComputationProto.TickOptionComputation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_TickOptionComputation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_TickOptionComputation_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033TickOptionComputation.proto\022\010protobuf\"" +
      "\217\003\n\025TickOptionComputation\022\022\n\005reqId\030\001 \001(\005" +
      "H\000\210\001\001\022\025\n\010tickType\030\002 \001(\005H\001\210\001\001\022\027\n\ntickAttr" +
      "ib\030\003 \001(\005H\002\210\001\001\022\027\n\nimpliedVol\030\004 \001(\001H\003\210\001\001\022\022" +
      "\n\005delta\030\005 \001(\001H\004\210\001\001\022\025\n\010optPrice\030\006 \001(\001H\005\210\001" +
      "\001\022\027\n\npvDividend\030\007 \001(\001H\006\210\001\001\022\022\n\005gamma\030\010 \001(" +
      "\001H\007\210\001\001\022\021\n\004vega\030\t \001(\001H\010\210\001\001\022\022\n\005theta\030\n \001(\001" +
      "H\t\210\001\001\022\025\n\010undPrice\030\013 \001(\001H\n\210\001\001B\010\n\006_reqIdB\013" +
      "\n\t_tickTypeB\r\n\013_tickAttribB\r\n\013_impliedVo" +
      "lB\010\n\006_deltaB\013\n\t_optPriceB\r\n\013_pvDividendB" +
      "\010\n\006_gammaB\007\n\005_vegaB\010\n\006_thetaB\013\n\t_undPric" +
      "eBE\n\026com.ib.client.protobufB\032TickOptionC" +
      "omputationProto\252\002\016IBApi.protobufb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_protobuf_TickOptionComputation_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_protobuf_TickOptionComputation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protobuf_TickOptionComputation_descriptor,
        new java.lang.String[] { "ReqId", "TickType", "TickAttrib", "ImpliedVol", "Delta", "OptPrice", "PvDividend", "Gamma", "Vega", "Theta", "UndPrice", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
