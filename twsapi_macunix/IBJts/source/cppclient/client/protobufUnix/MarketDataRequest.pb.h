// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MarketDataRequest.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_MarketDataRequest_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_MarketDataRequest_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "Contract.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_MarketDataRequest_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_MarketDataRequest_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_MarketDataRequest_2eproto;
namespace protobuf {
class MarketDataRequest;
class MarketDataRequestDefaultTypeInternal;
extern MarketDataRequestDefaultTypeInternal _MarketDataRequest_default_instance_;
class MarketDataRequest_MarketDataOptionsEntry_DoNotUse;
class MarketDataRequest_MarketDataOptionsEntry_DoNotUseDefaultTypeInternal;
extern MarketDataRequest_MarketDataOptionsEntry_DoNotUseDefaultTypeInternal _MarketDataRequest_MarketDataOptionsEntry_DoNotUse_default_instance_;
}  // namespace protobuf
PROTOBUF_NAMESPACE_OPEN
template<> ::protobuf::MarketDataRequest* Arena::CreateMaybeMessage<::protobuf::MarketDataRequest>(Arena*);
template<> ::protobuf::MarketDataRequest_MarketDataOptionsEntry_DoNotUse* Arena::CreateMaybeMessage<::protobuf::MarketDataRequest_MarketDataOptionsEntry_DoNotUse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace protobuf {

// ===================================================================

class MarketDataRequest_MarketDataOptionsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<MarketDataRequest_MarketDataOptionsEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<MarketDataRequest_MarketDataOptionsEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  MarketDataRequest_MarketDataOptionsEntry_DoNotUse();
  MarketDataRequest_MarketDataOptionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const MarketDataRequest_MarketDataOptionsEntry_DoNotUse& other);
  static const MarketDataRequest_MarketDataOptionsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const MarketDataRequest_MarketDataOptionsEntry_DoNotUse*>(&_MarketDataRequest_MarketDataOptionsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "protobuf.MarketDataRequest.MarketDataOptionsEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "protobuf.MarketDataRequest.MarketDataOptionsEntry.value");
 }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_MarketDataRequest_2eproto);
    return ::descriptor_table_MarketDataRequest_2eproto.file_level_metadata[0];
  }

  public:
};

// -------------------------------------------------------------------

class MarketDataRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MarketDataRequest) */ {
 public:
  inline MarketDataRequest() : MarketDataRequest(nullptr) {};
  virtual ~MarketDataRequest();

  MarketDataRequest(const MarketDataRequest& from);
  MarketDataRequest(MarketDataRequest&& from) noexcept
    : MarketDataRequest() {
    *this = ::std::move(from);
  }

  inline MarketDataRequest& operator=(const MarketDataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarketDataRequest& operator=(MarketDataRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MarketDataRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MarketDataRequest* internal_default_instance() {
    return reinterpret_cast<const MarketDataRequest*>(
               &_MarketDataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MarketDataRequest& a, MarketDataRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(MarketDataRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarketDataRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MarketDataRequest* New() const final {
    return CreateMaybeMessage<MarketDataRequest>(nullptr);
  }

  MarketDataRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MarketDataRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MarketDataRequest& from);
  void MergeFrom(const MarketDataRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MarketDataRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.MarketDataRequest";
  }
  protected:
  explicit MarketDataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_MarketDataRequest_2eproto);
    return ::descriptor_table_MarketDataRequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMarketDataOptionsFieldNumber = 6,
    kGenericTickListFieldNumber = 3,
    kContractFieldNumber = 2,
    kReqIdFieldNumber = 1,
    kSnapshotFieldNumber = 4,
    kRegulatorySnapshotFieldNumber = 5,
  };
  // map<string, string> marketDataOptions = 6;
  int marketdataoptions_size() const;
  private:
  int _internal_marketdataoptions_size() const;
  public:
  void clear_marketdataoptions();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      _internal_marketdataoptions() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      _internal_mutable_marketdataoptions();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      marketdataoptions() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      mutable_marketdataoptions();

  // string genericTickList = 3;
  bool has_genericticklist() const;
  private:
  bool _internal_has_genericticklist() const;
  public:
  void clear_genericticklist();
  const std::string& genericticklist() const;
  void set_genericticklist(const std::string& value);
  void set_genericticklist(std::string&& value);
  void set_genericticklist(const char* value);
  void set_genericticklist(const char* value, size_t size);
  std::string* mutable_genericticklist();
  std::string* release_genericticklist();
  void set_allocated_genericticklist(std::string* genericticklist);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_genericticklist();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_genericticklist(
      std::string* genericticklist);
  private:
  const std::string& _internal_genericticklist() const;
  void _internal_set_genericticklist(const std::string& value);
  std::string* _internal_mutable_genericticklist();
  public:

  // .protobuf.Contract contract = 2;
  bool has_contract() const;
  private:
  bool _internal_has_contract() const;
  public:
  void clear_contract();
  const ::protobuf::Contract& contract() const;
  ::protobuf::Contract* release_contract();
  ::protobuf::Contract* mutable_contract();
  void set_allocated_contract(::protobuf::Contract* contract);
  private:
  const ::protobuf::Contract& _internal_contract() const;
  ::protobuf::Contract* _internal_mutable_contract();
  public:
  void unsafe_arena_set_allocated_contract(
      ::protobuf::Contract* contract);
  ::protobuf::Contract* unsafe_arena_release_contract();

  // int32 reqId = 1;
  bool has_reqid() const;
  private:
  bool _internal_has_reqid() const;
  public:
  void clear_reqid();
  ::PROTOBUF_NAMESPACE_ID::int32 reqid() const;
  void set_reqid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_reqid() const;
  void _internal_set_reqid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool snapshot = 4;
  bool has_snapshot() const;
  private:
  bool _internal_has_snapshot() const;
  public:
  void clear_snapshot();
  bool snapshot() const;
  void set_snapshot(bool value);
  private:
  bool _internal_snapshot() const;
  void _internal_set_snapshot(bool value);
  public:

  // bool regulatorySnapshot = 5;
  bool has_regulatorysnapshot() const;
  private:
  bool _internal_has_regulatorysnapshot() const;
  public:
  void clear_regulatorysnapshot();
  bool regulatorysnapshot() const;
  void set_regulatorysnapshot(bool value);
  private:
  bool _internal_regulatorysnapshot() const;
  void _internal_set_regulatorysnapshot(bool value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.MarketDataRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      MarketDataRequest_MarketDataOptionsEntry_DoNotUse,
      std::string, std::string,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      0 > marketdataoptions_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr genericticklist_;
  ::protobuf::Contract* contract_;
  ::PROTOBUF_NAMESPACE_ID::int32 reqid_;
  bool snapshot_;
  bool regulatorysnapshot_;
  friend struct ::TableStruct_MarketDataRequest_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MarketDataRequest

// int32 reqId = 1;
inline bool MarketDataRequest::_internal_has_reqid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MarketDataRequest::has_reqid() const {
  return _internal_has_reqid();
}
inline void MarketDataRequest::clear_reqid() {
  reqid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MarketDataRequest::_internal_reqid() const {
  return reqid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MarketDataRequest::reqid() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataRequest.reqId)
  return _internal_reqid();
}
inline void MarketDataRequest::_internal_set_reqid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  reqid_ = value;
}
inline void MarketDataRequest::set_reqid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_reqid(value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDataRequest.reqId)
}

// .protobuf.Contract contract = 2;
inline bool MarketDataRequest::_internal_has_contract() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || contract_ != nullptr);
  return value;
}
inline bool MarketDataRequest::has_contract() const {
  return _internal_has_contract();
}
inline const ::protobuf::Contract& MarketDataRequest::_internal_contract() const {
  const ::protobuf::Contract* p = contract_;
  return p != nullptr ? *p : *reinterpret_cast<const ::protobuf::Contract*>(
      &::protobuf::_Contract_default_instance_);
}
inline const ::protobuf::Contract& MarketDataRequest::contract() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataRequest.contract)
  return _internal_contract();
}
inline void MarketDataRequest::unsafe_arena_set_allocated_contract(
    ::protobuf::Contract* contract) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(contract_);
  }
  contract_ = contract;
  if (contract) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MarketDataRequest.contract)
}
inline ::protobuf::Contract* MarketDataRequest::release_contract() {
  auto temp = unsafe_arena_release_contract();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::protobuf::Contract* MarketDataRequest::unsafe_arena_release_contract() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataRequest.contract)
  _has_bits_[0] &= ~0x00000002u;
  ::protobuf::Contract* temp = contract_;
  contract_ = nullptr;
  return temp;
}
inline ::protobuf::Contract* MarketDataRequest::_internal_mutable_contract() {
  _has_bits_[0] |= 0x00000002u;
  if (contract_ == nullptr) {
    auto* p = CreateMaybeMessage<::protobuf::Contract>(GetArena());
    contract_ = p;
  }
  return contract_;
}
inline ::protobuf::Contract* MarketDataRequest::mutable_contract() {
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataRequest.contract)
  return _internal_mutable_contract();
}
inline void MarketDataRequest::set_allocated_contract(::protobuf::Contract* contract) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(contract_);
  }
  if (contract) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(contract)->GetArena();
    if (message_arena != submessage_arena) {
      contract = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, contract, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  contract_ = contract;
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataRequest.contract)
}

// string genericTickList = 3;
inline bool MarketDataRequest::_internal_has_genericticklist() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MarketDataRequest::has_genericticklist() const {
  return _internal_has_genericticklist();
}
inline void MarketDataRequest::clear_genericticklist() {
  genericticklist_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MarketDataRequest::genericticklist() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataRequest.genericTickList)
  return _internal_genericticklist();
}
inline void MarketDataRequest::set_genericticklist(const std::string& value) {
  _internal_set_genericticklist(value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDataRequest.genericTickList)
}
inline std::string* MarketDataRequest::mutable_genericticklist() {
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataRequest.genericTickList)
  return _internal_mutable_genericticklist();
}
inline const std::string& MarketDataRequest::_internal_genericticklist() const {
  return genericticklist_.Get();
}
inline void MarketDataRequest::_internal_set_genericticklist(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  genericticklist_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void MarketDataRequest::set_genericticklist(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  genericticklist_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:protobuf.MarketDataRequest.genericTickList)
}
inline void MarketDataRequest::set_genericticklist(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  genericticklist_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:protobuf.MarketDataRequest.genericTickList)
}
inline void MarketDataRequest::set_genericticklist(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  genericticklist_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:protobuf.MarketDataRequest.genericTickList)
}
inline std::string* MarketDataRequest::_internal_mutable_genericticklist() {
  _has_bits_[0] |= 0x00000001u;
  return genericticklist_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* MarketDataRequest::release_genericticklist() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataRequest.genericTickList)
  if (!_internal_has_genericticklist()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return genericticklist_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MarketDataRequest::set_allocated_genericticklist(std::string* genericticklist) {
  if (genericticklist != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  genericticklist_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), genericticklist,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataRequest.genericTickList)
}
inline std::string* MarketDataRequest::unsafe_arena_release_genericticklist() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.MarketDataRequest.genericTickList)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return genericticklist_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void MarketDataRequest::unsafe_arena_set_allocated_genericticklist(
    std::string* genericticklist) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (genericticklist != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  genericticklist_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      genericticklist, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MarketDataRequest.genericTickList)
}

// bool snapshot = 4;
inline bool MarketDataRequest::_internal_has_snapshot() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MarketDataRequest::has_snapshot() const {
  return _internal_has_snapshot();
}
inline void MarketDataRequest::clear_snapshot() {
  snapshot_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool MarketDataRequest::_internal_snapshot() const {
  return snapshot_;
}
inline bool MarketDataRequest::snapshot() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataRequest.snapshot)
  return _internal_snapshot();
}
inline void MarketDataRequest::_internal_set_snapshot(bool value) {
  _has_bits_[0] |= 0x00000008u;
  snapshot_ = value;
}
inline void MarketDataRequest::set_snapshot(bool value) {
  _internal_set_snapshot(value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDataRequest.snapshot)
}

// bool regulatorySnapshot = 5;
inline bool MarketDataRequest::_internal_has_regulatorysnapshot() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MarketDataRequest::has_regulatorysnapshot() const {
  return _internal_has_regulatorysnapshot();
}
inline void MarketDataRequest::clear_regulatorysnapshot() {
  regulatorysnapshot_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool MarketDataRequest::_internal_regulatorysnapshot() const {
  return regulatorysnapshot_;
}
inline bool MarketDataRequest::regulatorysnapshot() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataRequest.regulatorySnapshot)
  return _internal_regulatorysnapshot();
}
inline void MarketDataRequest::_internal_set_regulatorysnapshot(bool value) {
  _has_bits_[0] |= 0x00000010u;
  regulatorysnapshot_ = value;
}
inline void MarketDataRequest::set_regulatorysnapshot(bool value) {
  _internal_set_regulatorysnapshot(value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDataRequest.regulatorySnapshot)
}

// map<string, string> marketDataOptions = 6;
inline int MarketDataRequest::_internal_marketdataoptions_size() const {
  return marketdataoptions_.size();
}
inline int MarketDataRequest::marketdataoptions_size() const {
  return _internal_marketdataoptions_size();
}
inline void MarketDataRequest::clear_marketdataoptions() {
  marketdataoptions_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
MarketDataRequest::_internal_marketdataoptions() const {
  return marketdataoptions_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
MarketDataRequest::marketdataoptions() const {
  // @@protoc_insertion_point(field_map:protobuf.MarketDataRequest.marketDataOptions)
  return _internal_marketdataoptions();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
MarketDataRequest::_internal_mutable_marketdataoptions() {
  return marketdataoptions_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
MarketDataRequest::mutable_marketdataoptions() {
  // @@protoc_insertion_point(field_mutable_map:protobuf.MarketDataRequest.marketDataOptions)
  return _internal_mutable_marketdataoptions();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_MarketDataRequest_2eproto
