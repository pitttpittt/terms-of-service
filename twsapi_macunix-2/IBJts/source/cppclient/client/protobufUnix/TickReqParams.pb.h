// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TickReqParams.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_TickReqParams_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_TickReqParams_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_TickReqParams_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_TickReqParams_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_TickReqParams_2eproto;
namespace protobuf {
class TickReqParams;
class TickReqParamsDefaultTypeInternal;
extern TickReqParamsDefaultTypeInternal _TickReqParams_default_instance_;
}  // namespace protobuf
PROTOBUF_NAMESPACE_OPEN
template<> ::protobuf::TickReqParams* Arena::CreateMaybeMessage<::protobuf::TickReqParams>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace protobuf {

// ===================================================================

class TickReqParams PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.TickReqParams) */ {
 public:
  inline TickReqParams() : TickReqParams(nullptr) {};
  virtual ~TickReqParams();

  TickReqParams(const TickReqParams& from);
  TickReqParams(TickReqParams&& from) noexcept
    : TickReqParams() {
    *this = ::std::move(from);
  }

  inline TickReqParams& operator=(const TickReqParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline TickReqParams& operator=(TickReqParams&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TickReqParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TickReqParams* internal_default_instance() {
    return reinterpret_cast<const TickReqParams*>(
               &_TickReqParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(TickReqParams& a, TickReqParams& b) {
    a.Swap(&b);
  }
  inline void Swap(TickReqParams* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TickReqParams* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TickReqParams* New() const final {
    return CreateMaybeMessage<TickReqParams>(nullptr);
  }

  TickReqParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TickReqParams>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TickReqParams& from);
  void MergeFrom(const TickReqParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TickReqParams* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.TickReqParams";
  }
  protected:
  explicit TickReqParams(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_TickReqParams_2eproto);
    return ::descriptor_table_TickReqParams_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMinTickFieldNumber = 2,
    kBboExchangeFieldNumber = 3,
    kReqIdFieldNumber = 1,
    kSnapshotPermissionsFieldNumber = 4,
  };
  // string minTick = 2;
  bool has_mintick() const;
  private:
  bool _internal_has_mintick() const;
  public:
  void clear_mintick();
  const std::string& mintick() const;
  void set_mintick(const std::string& value);
  void set_mintick(std::string&& value);
  void set_mintick(const char* value);
  void set_mintick(const char* value, size_t size);
  std::string* mutable_mintick();
  std::string* release_mintick();
  void set_allocated_mintick(std::string* mintick);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_mintick();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_mintick(
      std::string* mintick);
  private:
  const std::string& _internal_mintick() const;
  void _internal_set_mintick(const std::string& value);
  std::string* _internal_mutable_mintick();
  public:

  // string bboExchange = 3;
  bool has_bboexchange() const;
  private:
  bool _internal_has_bboexchange() const;
  public:
  void clear_bboexchange();
  const std::string& bboexchange() const;
  void set_bboexchange(const std::string& value);
  void set_bboexchange(std::string&& value);
  void set_bboexchange(const char* value);
  void set_bboexchange(const char* value, size_t size);
  std::string* mutable_bboexchange();
  std::string* release_bboexchange();
  void set_allocated_bboexchange(std::string* bboexchange);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_bboexchange();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_bboexchange(
      std::string* bboexchange);
  private:
  const std::string& _internal_bboexchange() const;
  void _internal_set_bboexchange(const std::string& value);
  std::string* _internal_mutable_bboexchange();
  public:

  // int32 reqId = 1;
  bool has_reqid() const;
  private:
  bool _internal_has_reqid() const;
  public:
  void clear_reqid();
  ::PROTOBUF_NAMESPACE_ID::int32 reqid() const;
  void set_reqid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_reqid() const;
  void _internal_set_reqid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 snapshotPermissions = 4;
  bool has_snapshotpermissions() const;
  private:
  bool _internal_has_snapshotpermissions() const;
  public:
  void clear_snapshotpermissions();
  ::PROTOBUF_NAMESPACE_ID::int32 snapshotpermissions() const;
  void set_snapshotpermissions(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_snapshotpermissions() const;
  void _internal_set_snapshotpermissions(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.TickReqParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr mintick_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bboexchange_;
  ::PROTOBUF_NAMESPACE_ID::int32 reqid_;
  ::PROTOBUF_NAMESPACE_ID::int32 snapshotpermissions_;
  friend struct ::TableStruct_TickReqParams_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TickReqParams

// int32 reqId = 1;
inline bool TickReqParams::_internal_has_reqid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool TickReqParams::has_reqid() const {
  return _internal_has_reqid();
}
inline void TickReqParams::clear_reqid() {
  reqid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TickReqParams::_internal_reqid() const {
  return reqid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TickReqParams::reqid() const {
  // @@protoc_insertion_point(field_get:protobuf.TickReqParams.reqId)
  return _internal_reqid();
}
inline void TickReqParams::_internal_set_reqid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  reqid_ = value;
}
inline void TickReqParams::set_reqid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_reqid(value);
  // @@protoc_insertion_point(field_set:protobuf.TickReqParams.reqId)
}

// string minTick = 2;
inline bool TickReqParams::_internal_has_mintick() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TickReqParams::has_mintick() const {
  return _internal_has_mintick();
}
inline void TickReqParams::clear_mintick() {
  mintick_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& TickReqParams::mintick() const {
  // @@protoc_insertion_point(field_get:protobuf.TickReqParams.minTick)
  return _internal_mintick();
}
inline void TickReqParams::set_mintick(const std::string& value) {
  _internal_set_mintick(value);
  // @@protoc_insertion_point(field_set:protobuf.TickReqParams.minTick)
}
inline std::string* TickReqParams::mutable_mintick() {
  // @@protoc_insertion_point(field_mutable:protobuf.TickReqParams.minTick)
  return _internal_mutable_mintick();
}
inline const std::string& TickReqParams::_internal_mintick() const {
  return mintick_.Get();
}
inline void TickReqParams::_internal_set_mintick(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  mintick_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void TickReqParams::set_mintick(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  mintick_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:protobuf.TickReqParams.minTick)
}
inline void TickReqParams::set_mintick(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  mintick_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:protobuf.TickReqParams.minTick)
}
inline void TickReqParams::set_mintick(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  mintick_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:protobuf.TickReqParams.minTick)
}
inline std::string* TickReqParams::_internal_mutable_mintick() {
  _has_bits_[0] |= 0x00000001u;
  return mintick_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* TickReqParams::release_mintick() {
  // @@protoc_insertion_point(field_release:protobuf.TickReqParams.minTick)
  if (!_internal_has_mintick()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return mintick_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void TickReqParams::set_allocated_mintick(std::string* mintick) {
  if (mintick != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  mintick_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), mintick,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:protobuf.TickReqParams.minTick)
}
inline std::string* TickReqParams::unsafe_arena_release_mintick() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.TickReqParams.minTick)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return mintick_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void TickReqParams::unsafe_arena_set_allocated_mintick(
    std::string* mintick) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (mintick != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  mintick_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      mintick, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.TickReqParams.minTick)
}

// string bboExchange = 3;
inline bool TickReqParams::_internal_has_bboexchange() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TickReqParams::has_bboexchange() const {
  return _internal_has_bboexchange();
}
inline void TickReqParams::clear_bboexchange() {
  bboexchange_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& TickReqParams::bboexchange() const {
  // @@protoc_insertion_point(field_get:protobuf.TickReqParams.bboExchange)
  return _internal_bboexchange();
}
inline void TickReqParams::set_bboexchange(const std::string& value) {
  _internal_set_bboexchange(value);
  // @@protoc_insertion_point(field_set:protobuf.TickReqParams.bboExchange)
}
inline std::string* TickReqParams::mutable_bboexchange() {
  // @@protoc_insertion_point(field_mutable:protobuf.TickReqParams.bboExchange)
  return _internal_mutable_bboexchange();
}
inline const std::string& TickReqParams::_internal_bboexchange() const {
  return bboexchange_.Get();
}
inline void TickReqParams::_internal_set_bboexchange(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  bboexchange_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void TickReqParams::set_bboexchange(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  bboexchange_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:protobuf.TickReqParams.bboExchange)
}
inline void TickReqParams::set_bboexchange(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  bboexchange_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:protobuf.TickReqParams.bboExchange)
}
inline void TickReqParams::set_bboexchange(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  bboexchange_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:protobuf.TickReqParams.bboExchange)
}
inline std::string* TickReqParams::_internal_mutable_bboexchange() {
  _has_bits_[0] |= 0x00000002u;
  return bboexchange_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* TickReqParams::release_bboexchange() {
  // @@protoc_insertion_point(field_release:protobuf.TickReqParams.bboExchange)
  if (!_internal_has_bboexchange()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return bboexchange_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void TickReqParams::set_allocated_bboexchange(std::string* bboexchange) {
  if (bboexchange != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  bboexchange_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), bboexchange,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:protobuf.TickReqParams.bboExchange)
}
inline std::string* TickReqParams::unsafe_arena_release_bboexchange() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.TickReqParams.bboExchange)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return bboexchange_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void TickReqParams::unsafe_arena_set_allocated_bboexchange(
    std::string* bboexchange) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (bboexchange != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  bboexchange_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      bboexchange, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.TickReqParams.bboExchange)
}

// int32 snapshotPermissions = 4;
inline bool TickReqParams::_internal_has_snapshotpermissions() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool TickReqParams::has_snapshotpermissions() const {
  return _internal_has_snapshotpermissions();
}
inline void TickReqParams::clear_snapshotpermissions() {
  snapshotpermissions_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TickReqParams::_internal_snapshotpermissions() const {
  return snapshotpermissions_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TickReqParams::snapshotpermissions() const {
  // @@protoc_insertion_point(field_get:protobuf.TickReqParams.snapshotPermissions)
  return _internal_snapshotpermissions();
}
inline void TickReqParams::_internal_set_snapshotpermissions(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  snapshotpermissions_ = value;
}
inline void TickReqParams::set_snapshotpermissions(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_snapshotpermissions(value);
  // @@protoc_insertion_point(field_set:protobuf.TickReqParams.snapshotPermissions)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_TickReqParams_2eproto
