// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TickAttribLast.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_TickAttribLast_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_TickAttribLast_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_TickAttribLast_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_TickAttribLast_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_TickAttribLast_2eproto;
namespace protobuf {
class TickAttribLast;
class TickAttribLastDefaultTypeInternal;
extern TickAttribLastDefaultTypeInternal _TickAttribLast_default_instance_;
}  // namespace protobuf
PROTOBUF_NAMESPACE_OPEN
template<> ::protobuf::TickAttribLast* Arena::CreateMaybeMessage<::protobuf::TickAttribLast>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace protobuf {

// ===================================================================

class TickAttribLast PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.TickAttribLast) */ {
 public:
  inline TickAttribLast() : TickAttribLast(nullptr) {};
  virtual ~TickAttribLast();

  TickAttribLast(const TickAttribLast& from);
  TickAttribLast(TickAttribLast&& from) noexcept
    : TickAttribLast() {
    *this = ::std::move(from);
  }

  inline TickAttribLast& operator=(const TickAttribLast& from) {
    CopyFrom(from);
    return *this;
  }
  inline TickAttribLast& operator=(TickAttribLast&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TickAttribLast& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TickAttribLast* internal_default_instance() {
    return reinterpret_cast<const TickAttribLast*>(
               &_TickAttribLast_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(TickAttribLast& a, TickAttribLast& b) {
    a.Swap(&b);
  }
  inline void Swap(TickAttribLast* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TickAttribLast* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TickAttribLast* New() const final {
    return CreateMaybeMessage<TickAttribLast>(nullptr);
  }

  TickAttribLast* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TickAttribLast>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TickAttribLast& from);
  void MergeFrom(const TickAttribLast& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TickAttribLast* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.TickAttribLast";
  }
  protected:
  explicit TickAttribLast(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_TickAttribLast_2eproto);
    return ::descriptor_table_TickAttribLast_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPastLimitFieldNumber = 1,
    kUnreportedFieldNumber = 2,
  };
  // bool pastLimit = 1;
  bool has_pastlimit() const;
  private:
  bool _internal_has_pastlimit() const;
  public:
  void clear_pastlimit();
  bool pastlimit() const;
  void set_pastlimit(bool value);
  private:
  bool _internal_pastlimit() const;
  void _internal_set_pastlimit(bool value);
  public:

  // bool unreported = 2;
  bool has_unreported() const;
  private:
  bool _internal_has_unreported() const;
  public:
  void clear_unreported();
  bool unreported() const;
  void set_unreported(bool value);
  private:
  bool _internal_unreported() const;
  void _internal_set_unreported(bool value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.TickAttribLast)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool pastlimit_;
  bool unreported_;
  friend struct ::TableStruct_TickAttribLast_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TickAttribLast

// bool pastLimit = 1;
inline bool TickAttribLast::_internal_has_pastlimit() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TickAttribLast::has_pastlimit() const {
  return _internal_has_pastlimit();
}
inline void TickAttribLast::clear_pastlimit() {
  pastlimit_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool TickAttribLast::_internal_pastlimit() const {
  return pastlimit_;
}
inline bool TickAttribLast::pastlimit() const {
  // @@protoc_insertion_point(field_get:protobuf.TickAttribLast.pastLimit)
  return _internal_pastlimit();
}
inline void TickAttribLast::_internal_set_pastlimit(bool value) {
  _has_bits_[0] |= 0x00000001u;
  pastlimit_ = value;
}
inline void TickAttribLast::set_pastlimit(bool value) {
  _internal_set_pastlimit(value);
  // @@protoc_insertion_point(field_set:protobuf.TickAttribLast.pastLimit)
}

// bool unreported = 2;
inline bool TickAttribLast::_internal_has_unreported() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TickAttribLast::has_unreported() const {
  return _internal_has_unreported();
}
inline void TickAttribLast::clear_unreported() {
  unreported_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool TickAttribLast::_internal_unreported() const {
  return unreported_;
}
inline bool TickAttribLast::unreported() const {
  // @@protoc_insertion_point(field_get:protobuf.TickAttribLast.unreported)
  return _internal_unreported();
}
inline void TickAttribLast::_internal_set_unreported(bool value) {
  _has_bits_[0] |= 0x00000002u;
  unreported_ = value;
}
inline void TickAttribLast::set_unreported(bool value) {
  _internal_set_unreported(value);
  // @@protoc_insertion_point(field_set:protobuf.TickAttribLast.unreported)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_TickAttribLast_2eproto
