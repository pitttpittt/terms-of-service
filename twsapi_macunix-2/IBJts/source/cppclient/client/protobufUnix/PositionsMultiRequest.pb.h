// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PositionsMultiRequest.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_PositionsMultiRequest_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_PositionsMultiRequest_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_PositionsMultiRequest_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_PositionsMultiRequest_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_PositionsMultiRequest_2eproto;
namespace protobuf {
class PositionsMultiRequest;
class PositionsMultiRequestDefaultTypeInternal;
extern PositionsMultiRequestDefaultTypeInternal _PositionsMultiRequest_default_instance_;
}  // namespace protobuf
PROTOBUF_NAMESPACE_OPEN
template<> ::protobuf::PositionsMultiRequest* Arena::CreateMaybeMessage<::protobuf::PositionsMultiRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace protobuf {

// ===================================================================

class PositionsMultiRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.PositionsMultiRequest) */ {
 public:
  inline PositionsMultiRequest() : PositionsMultiRequest(nullptr) {};
  virtual ~PositionsMultiRequest();

  PositionsMultiRequest(const PositionsMultiRequest& from);
  PositionsMultiRequest(PositionsMultiRequest&& from) noexcept
    : PositionsMultiRequest() {
    *this = ::std::move(from);
  }

  inline PositionsMultiRequest& operator=(const PositionsMultiRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PositionsMultiRequest& operator=(PositionsMultiRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PositionsMultiRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PositionsMultiRequest* internal_default_instance() {
    return reinterpret_cast<const PositionsMultiRequest*>(
               &_PositionsMultiRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PositionsMultiRequest& a, PositionsMultiRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PositionsMultiRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PositionsMultiRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PositionsMultiRequest* New() const final {
    return CreateMaybeMessage<PositionsMultiRequest>(nullptr);
  }

  PositionsMultiRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PositionsMultiRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PositionsMultiRequest& from);
  void MergeFrom(const PositionsMultiRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PositionsMultiRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.PositionsMultiRequest";
  }
  protected:
  explicit PositionsMultiRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_PositionsMultiRequest_2eproto);
    return ::descriptor_table_PositionsMultiRequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountFieldNumber = 2,
    kModelCodeFieldNumber = 3,
    kReqIdFieldNumber = 1,
  };
  // string account = 2;
  bool has_account() const;
  private:
  bool _internal_has_account() const;
  public:
  void clear_account();
  const std::string& account() const;
  void set_account(const std::string& value);
  void set_account(std::string&& value);
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  std::string* mutable_account();
  std::string* release_account();
  void set_allocated_account(std::string* account);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_account();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_account(
      std::string* account);
  private:
  const std::string& _internal_account() const;
  void _internal_set_account(const std::string& value);
  std::string* _internal_mutable_account();
  public:

  // string modelCode = 3;
  bool has_modelcode() const;
  private:
  bool _internal_has_modelcode() const;
  public:
  void clear_modelcode();
  const std::string& modelcode() const;
  void set_modelcode(const std::string& value);
  void set_modelcode(std::string&& value);
  void set_modelcode(const char* value);
  void set_modelcode(const char* value, size_t size);
  std::string* mutable_modelcode();
  std::string* release_modelcode();
  void set_allocated_modelcode(std::string* modelcode);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_modelcode();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_modelcode(
      std::string* modelcode);
  private:
  const std::string& _internal_modelcode() const;
  void _internal_set_modelcode(const std::string& value);
  std::string* _internal_mutable_modelcode();
  public:

  // int32 reqId = 1;
  bool has_reqid() const;
  private:
  bool _internal_has_reqid() const;
  public:
  void clear_reqid();
  ::PROTOBUF_NAMESPACE_ID::int32 reqid() const;
  void set_reqid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_reqid() const;
  void _internal_set_reqid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.PositionsMultiRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr account_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr modelcode_;
  ::PROTOBUF_NAMESPACE_ID::int32 reqid_;
  friend struct ::TableStruct_PositionsMultiRequest_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PositionsMultiRequest

// int32 reqId = 1;
inline bool PositionsMultiRequest::_internal_has_reqid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PositionsMultiRequest::has_reqid() const {
  return _internal_has_reqid();
}
inline void PositionsMultiRequest::clear_reqid() {
  reqid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PositionsMultiRequest::_internal_reqid() const {
  return reqid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PositionsMultiRequest::reqid() const {
  // @@protoc_insertion_point(field_get:protobuf.PositionsMultiRequest.reqId)
  return _internal_reqid();
}
inline void PositionsMultiRequest::_internal_set_reqid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  reqid_ = value;
}
inline void PositionsMultiRequest::set_reqid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_reqid(value);
  // @@protoc_insertion_point(field_set:protobuf.PositionsMultiRequest.reqId)
}

// string account = 2;
inline bool PositionsMultiRequest::_internal_has_account() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PositionsMultiRequest::has_account() const {
  return _internal_has_account();
}
inline void PositionsMultiRequest::clear_account() {
  account_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PositionsMultiRequest::account() const {
  // @@protoc_insertion_point(field_get:protobuf.PositionsMultiRequest.account)
  return _internal_account();
}
inline void PositionsMultiRequest::set_account(const std::string& value) {
  _internal_set_account(value);
  // @@protoc_insertion_point(field_set:protobuf.PositionsMultiRequest.account)
}
inline std::string* PositionsMultiRequest::mutable_account() {
  // @@protoc_insertion_point(field_mutable:protobuf.PositionsMultiRequest.account)
  return _internal_mutable_account();
}
inline const std::string& PositionsMultiRequest::_internal_account() const {
  return account_.Get();
}
inline void PositionsMultiRequest::_internal_set_account(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  account_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void PositionsMultiRequest::set_account(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  account_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:protobuf.PositionsMultiRequest.account)
}
inline void PositionsMultiRequest::set_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  account_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:protobuf.PositionsMultiRequest.account)
}
inline void PositionsMultiRequest::set_account(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  account_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:protobuf.PositionsMultiRequest.account)
}
inline std::string* PositionsMultiRequest::_internal_mutable_account() {
  _has_bits_[0] |= 0x00000001u;
  return account_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* PositionsMultiRequest::release_account() {
  // @@protoc_insertion_point(field_release:protobuf.PositionsMultiRequest.account)
  if (!_internal_has_account()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return account_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void PositionsMultiRequest::set_allocated_account(std::string* account) {
  if (account != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  account_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), account,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:protobuf.PositionsMultiRequest.account)
}
inline std::string* PositionsMultiRequest::unsafe_arena_release_account() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.PositionsMultiRequest.account)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return account_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void PositionsMultiRequest::unsafe_arena_set_allocated_account(
    std::string* account) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (account != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  account_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      account, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.PositionsMultiRequest.account)
}

// string modelCode = 3;
inline bool PositionsMultiRequest::_internal_has_modelcode() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PositionsMultiRequest::has_modelcode() const {
  return _internal_has_modelcode();
}
inline void PositionsMultiRequest::clear_modelcode() {
  modelcode_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& PositionsMultiRequest::modelcode() const {
  // @@protoc_insertion_point(field_get:protobuf.PositionsMultiRequest.modelCode)
  return _internal_modelcode();
}
inline void PositionsMultiRequest::set_modelcode(const std::string& value) {
  _internal_set_modelcode(value);
  // @@protoc_insertion_point(field_set:protobuf.PositionsMultiRequest.modelCode)
}
inline std::string* PositionsMultiRequest::mutable_modelcode() {
  // @@protoc_insertion_point(field_mutable:protobuf.PositionsMultiRequest.modelCode)
  return _internal_mutable_modelcode();
}
inline const std::string& PositionsMultiRequest::_internal_modelcode() const {
  return modelcode_.Get();
}
inline void PositionsMultiRequest::_internal_set_modelcode(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  modelcode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void PositionsMultiRequest::set_modelcode(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  modelcode_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:protobuf.PositionsMultiRequest.modelCode)
}
inline void PositionsMultiRequest::set_modelcode(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  modelcode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:protobuf.PositionsMultiRequest.modelCode)
}
inline void PositionsMultiRequest::set_modelcode(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  modelcode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:protobuf.PositionsMultiRequest.modelCode)
}
inline std::string* PositionsMultiRequest::_internal_mutable_modelcode() {
  _has_bits_[0] |= 0x00000002u;
  return modelcode_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* PositionsMultiRequest::release_modelcode() {
  // @@protoc_insertion_point(field_release:protobuf.PositionsMultiRequest.modelCode)
  if (!_internal_has_modelcode()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return modelcode_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void PositionsMultiRequest::set_allocated_modelcode(std::string* modelcode) {
  if (modelcode != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  modelcode_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), modelcode,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:protobuf.PositionsMultiRequest.modelCode)
}
inline std::string* PositionsMultiRequest::unsafe_arena_release_modelcode() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.PositionsMultiRequest.modelCode)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return modelcode_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void PositionsMultiRequest::unsafe_arena_set_allocated_modelcode(
    std::string* modelcode) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (modelcode != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  modelcode_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      modelcode, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.PositionsMultiRequest.modelCode)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_PositionsMultiRequest_2eproto
