// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MarketDepthRequest.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_MarketDepthRequest_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_MarketDepthRequest_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "Contract.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_MarketDepthRequest_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_MarketDepthRequest_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_MarketDepthRequest_2eproto;
namespace protobuf {
class MarketDepthRequest;
class MarketDepthRequestDefaultTypeInternal;
extern MarketDepthRequestDefaultTypeInternal _MarketDepthRequest_default_instance_;
class MarketDepthRequest_MarketDepthOptionsEntry_DoNotUse;
class MarketDepthRequest_MarketDepthOptionsEntry_DoNotUseDefaultTypeInternal;
extern MarketDepthRequest_MarketDepthOptionsEntry_DoNotUseDefaultTypeInternal _MarketDepthRequest_MarketDepthOptionsEntry_DoNotUse_default_instance_;
}  // namespace protobuf
PROTOBUF_NAMESPACE_OPEN
template<> ::protobuf::MarketDepthRequest* Arena::CreateMaybeMessage<::protobuf::MarketDepthRequest>(Arena*);
template<> ::protobuf::MarketDepthRequest_MarketDepthOptionsEntry_DoNotUse* Arena::CreateMaybeMessage<::protobuf::MarketDepthRequest_MarketDepthOptionsEntry_DoNotUse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace protobuf {

// ===================================================================

class MarketDepthRequest_MarketDepthOptionsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<MarketDepthRequest_MarketDepthOptionsEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<MarketDepthRequest_MarketDepthOptionsEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  MarketDepthRequest_MarketDepthOptionsEntry_DoNotUse();
  MarketDepthRequest_MarketDepthOptionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const MarketDepthRequest_MarketDepthOptionsEntry_DoNotUse& other);
  static const MarketDepthRequest_MarketDepthOptionsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const MarketDepthRequest_MarketDepthOptionsEntry_DoNotUse*>(&_MarketDepthRequest_MarketDepthOptionsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "protobuf.MarketDepthRequest.MarketDepthOptionsEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "protobuf.MarketDepthRequest.MarketDepthOptionsEntry.value");
 }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_MarketDepthRequest_2eproto);
    return ::descriptor_table_MarketDepthRequest_2eproto.file_level_metadata[0];
  }

  public:
};

// -------------------------------------------------------------------

class MarketDepthRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MarketDepthRequest) */ {
 public:
  inline MarketDepthRequest() : MarketDepthRequest(nullptr) {};
  virtual ~MarketDepthRequest();

  MarketDepthRequest(const MarketDepthRequest& from);
  MarketDepthRequest(MarketDepthRequest&& from) noexcept
    : MarketDepthRequest() {
    *this = ::std::move(from);
  }

  inline MarketDepthRequest& operator=(const MarketDepthRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarketDepthRequest& operator=(MarketDepthRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MarketDepthRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MarketDepthRequest* internal_default_instance() {
    return reinterpret_cast<const MarketDepthRequest*>(
               &_MarketDepthRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MarketDepthRequest& a, MarketDepthRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(MarketDepthRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarketDepthRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MarketDepthRequest* New() const final {
    return CreateMaybeMessage<MarketDepthRequest>(nullptr);
  }

  MarketDepthRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MarketDepthRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MarketDepthRequest& from);
  void MergeFrom(const MarketDepthRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MarketDepthRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.MarketDepthRequest";
  }
  protected:
  explicit MarketDepthRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_MarketDepthRequest_2eproto);
    return ::descriptor_table_MarketDepthRequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMarketDepthOptionsFieldNumber = 5,
    kContractFieldNumber = 2,
    kReqIdFieldNumber = 1,
    kNumRowsFieldNumber = 3,
    kIsSmartDepthFieldNumber = 4,
  };
  // map<string, string> marketDepthOptions = 5;
  int marketdepthoptions_size() const;
  private:
  int _internal_marketdepthoptions_size() const;
  public:
  void clear_marketdepthoptions();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      _internal_marketdepthoptions() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      _internal_mutable_marketdepthoptions();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      marketdepthoptions() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      mutable_marketdepthoptions();

  // .protobuf.Contract contract = 2;
  bool has_contract() const;
  private:
  bool _internal_has_contract() const;
  public:
  void clear_contract();
  const ::protobuf::Contract& contract() const;
  ::protobuf::Contract* release_contract();
  ::protobuf::Contract* mutable_contract();
  void set_allocated_contract(::protobuf::Contract* contract);
  private:
  const ::protobuf::Contract& _internal_contract() const;
  ::protobuf::Contract* _internal_mutable_contract();
  public:
  void unsafe_arena_set_allocated_contract(
      ::protobuf::Contract* contract);
  ::protobuf::Contract* unsafe_arena_release_contract();

  // int32 reqId = 1;
  bool has_reqid() const;
  private:
  bool _internal_has_reqid() const;
  public:
  void clear_reqid();
  ::PROTOBUF_NAMESPACE_ID::int32 reqid() const;
  void set_reqid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_reqid() const;
  void _internal_set_reqid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 numRows = 3;
  bool has_numrows() const;
  private:
  bool _internal_has_numrows() const;
  public:
  void clear_numrows();
  ::PROTOBUF_NAMESPACE_ID::int32 numrows() const;
  void set_numrows(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_numrows() const;
  void _internal_set_numrows(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool isSmartDepth = 4;
  bool has_issmartdepth() const;
  private:
  bool _internal_has_issmartdepth() const;
  public:
  void clear_issmartdepth();
  bool issmartdepth() const;
  void set_issmartdepth(bool value);
  private:
  bool _internal_issmartdepth() const;
  void _internal_set_issmartdepth(bool value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.MarketDepthRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      MarketDepthRequest_MarketDepthOptionsEntry_DoNotUse,
      std::string, std::string,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      0 > marketdepthoptions_;
  ::protobuf::Contract* contract_;
  ::PROTOBUF_NAMESPACE_ID::int32 reqid_;
  ::PROTOBUF_NAMESPACE_ID::int32 numrows_;
  bool issmartdepth_;
  friend struct ::TableStruct_MarketDepthRequest_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MarketDepthRequest

// int32 reqId = 1;
inline bool MarketDepthRequest::_internal_has_reqid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MarketDepthRequest::has_reqid() const {
  return _internal_has_reqid();
}
inline void MarketDepthRequest::clear_reqid() {
  reqid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MarketDepthRequest::_internal_reqid() const {
  return reqid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MarketDepthRequest::reqid() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDepthRequest.reqId)
  return _internal_reqid();
}
inline void MarketDepthRequest::_internal_set_reqid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  reqid_ = value;
}
inline void MarketDepthRequest::set_reqid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_reqid(value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDepthRequest.reqId)
}

// .protobuf.Contract contract = 2;
inline bool MarketDepthRequest::_internal_has_contract() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || contract_ != nullptr);
  return value;
}
inline bool MarketDepthRequest::has_contract() const {
  return _internal_has_contract();
}
inline const ::protobuf::Contract& MarketDepthRequest::_internal_contract() const {
  const ::protobuf::Contract* p = contract_;
  return p != nullptr ? *p : *reinterpret_cast<const ::protobuf::Contract*>(
      &::protobuf::_Contract_default_instance_);
}
inline const ::protobuf::Contract& MarketDepthRequest::contract() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDepthRequest.contract)
  return _internal_contract();
}
inline void MarketDepthRequest::unsafe_arena_set_allocated_contract(
    ::protobuf::Contract* contract) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(contract_);
  }
  contract_ = contract;
  if (contract) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MarketDepthRequest.contract)
}
inline ::protobuf::Contract* MarketDepthRequest::release_contract() {
  auto temp = unsafe_arena_release_contract();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::protobuf::Contract* MarketDepthRequest::unsafe_arena_release_contract() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDepthRequest.contract)
  _has_bits_[0] &= ~0x00000001u;
  ::protobuf::Contract* temp = contract_;
  contract_ = nullptr;
  return temp;
}
inline ::protobuf::Contract* MarketDepthRequest::_internal_mutable_contract() {
  _has_bits_[0] |= 0x00000001u;
  if (contract_ == nullptr) {
    auto* p = CreateMaybeMessage<::protobuf::Contract>(GetArena());
    contract_ = p;
  }
  return contract_;
}
inline ::protobuf::Contract* MarketDepthRequest::mutable_contract() {
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDepthRequest.contract)
  return _internal_mutable_contract();
}
inline void MarketDepthRequest::set_allocated_contract(::protobuf::Contract* contract) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(contract_);
  }
  if (contract) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(contract)->GetArena();
    if (message_arena != submessage_arena) {
      contract = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, contract, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  contract_ = contract;
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDepthRequest.contract)
}

// int32 numRows = 3;
inline bool MarketDepthRequest::_internal_has_numrows() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MarketDepthRequest::has_numrows() const {
  return _internal_has_numrows();
}
inline void MarketDepthRequest::clear_numrows() {
  numrows_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MarketDepthRequest::_internal_numrows() const {
  return numrows_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MarketDepthRequest::numrows() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDepthRequest.numRows)
  return _internal_numrows();
}
inline void MarketDepthRequest::_internal_set_numrows(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  numrows_ = value;
}
inline void MarketDepthRequest::set_numrows(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_numrows(value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDepthRequest.numRows)
}

// bool isSmartDepth = 4;
inline bool MarketDepthRequest::_internal_has_issmartdepth() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MarketDepthRequest::has_issmartdepth() const {
  return _internal_has_issmartdepth();
}
inline void MarketDepthRequest::clear_issmartdepth() {
  issmartdepth_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool MarketDepthRequest::_internal_issmartdepth() const {
  return issmartdepth_;
}
inline bool MarketDepthRequest::issmartdepth() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDepthRequest.isSmartDepth)
  return _internal_issmartdepth();
}
inline void MarketDepthRequest::_internal_set_issmartdepth(bool value) {
  _has_bits_[0] |= 0x00000008u;
  issmartdepth_ = value;
}
inline void MarketDepthRequest::set_issmartdepth(bool value) {
  _internal_set_issmartdepth(value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDepthRequest.isSmartDepth)
}

// map<string, string> marketDepthOptions = 5;
inline int MarketDepthRequest::_internal_marketdepthoptions_size() const {
  return marketdepthoptions_.size();
}
inline int MarketDepthRequest::marketdepthoptions_size() const {
  return _internal_marketdepthoptions_size();
}
inline void MarketDepthRequest::clear_marketdepthoptions() {
  marketdepthoptions_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
MarketDepthRequest::_internal_marketdepthoptions() const {
  return marketdepthoptions_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
MarketDepthRequest::marketdepthoptions() const {
  // @@protoc_insertion_point(field_map:protobuf.MarketDepthRequest.marketDepthOptions)
  return _internal_marketdepthoptions();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
MarketDepthRequest::_internal_mutable_marketdepthoptions() {
  return marketdepthoptions_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
MarketDepthRequest::mutable_marketdepthoptions() {
  // @@protoc_insertion_point(field_mutable_map:protobuf.MarketDepthRequest.marketDepthOptions)
  return _internal_mutable_marketdepthoptions();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_MarketDepthRequest_2eproto
