// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AccountSummaryRequest.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_AccountSummaryRequest_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_AccountSummaryRequest_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_AccountSummaryRequest_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_AccountSummaryRequest_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_AccountSummaryRequest_2eproto;
namespace protobuf {
class AccountSummaryRequest;
class AccountSummaryRequestDefaultTypeInternal;
extern AccountSummaryRequestDefaultTypeInternal _AccountSummaryRequest_default_instance_;
}  // namespace protobuf
PROTOBUF_NAMESPACE_OPEN
template<> ::protobuf::AccountSummaryRequest* Arena::CreateMaybeMessage<::protobuf::AccountSummaryRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace protobuf {

// ===================================================================

class AccountSummaryRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.AccountSummaryRequest) */ {
 public:
  inline AccountSummaryRequest() : AccountSummaryRequest(nullptr) {};
  virtual ~AccountSummaryRequest();

  AccountSummaryRequest(const AccountSummaryRequest& from);
  AccountSummaryRequest(AccountSummaryRequest&& from) noexcept
    : AccountSummaryRequest() {
    *this = ::std::move(from);
  }

  inline AccountSummaryRequest& operator=(const AccountSummaryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AccountSummaryRequest& operator=(AccountSummaryRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AccountSummaryRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountSummaryRequest* internal_default_instance() {
    return reinterpret_cast<const AccountSummaryRequest*>(
               &_AccountSummaryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AccountSummaryRequest& a, AccountSummaryRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AccountSummaryRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AccountSummaryRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AccountSummaryRequest* New() const final {
    return CreateMaybeMessage<AccountSummaryRequest>(nullptr);
  }

  AccountSummaryRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AccountSummaryRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AccountSummaryRequest& from);
  void MergeFrom(const AccountSummaryRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AccountSummaryRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.AccountSummaryRequest";
  }
  protected:
  explicit AccountSummaryRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AccountSummaryRequest_2eproto);
    return ::descriptor_table_AccountSummaryRequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGroupFieldNumber = 2,
    kTagsFieldNumber = 3,
    kReqIdFieldNumber = 1,
  };
  // string group = 2;
  bool has_group() const;
  private:
  bool _internal_has_group() const;
  public:
  void clear_group();
  const std::string& group() const;
  void set_group(const std::string& value);
  void set_group(std::string&& value);
  void set_group(const char* value);
  void set_group(const char* value, size_t size);
  std::string* mutable_group();
  std::string* release_group();
  void set_allocated_group(std::string* group);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_group();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_group(
      std::string* group);
  private:
  const std::string& _internal_group() const;
  void _internal_set_group(const std::string& value);
  std::string* _internal_mutable_group();
  public:

  // string tags = 3;
  bool has_tags() const;
  private:
  bool _internal_has_tags() const;
  public:
  void clear_tags();
  const std::string& tags() const;
  void set_tags(const std::string& value);
  void set_tags(std::string&& value);
  void set_tags(const char* value);
  void set_tags(const char* value, size_t size);
  std::string* mutable_tags();
  std::string* release_tags();
  void set_allocated_tags(std::string* tags);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_tags();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_tags(
      std::string* tags);
  private:
  const std::string& _internal_tags() const;
  void _internal_set_tags(const std::string& value);
  std::string* _internal_mutable_tags();
  public:

  // int32 reqId = 1;
  bool has_reqid() const;
  private:
  bool _internal_has_reqid() const;
  public:
  void clear_reqid();
  ::PROTOBUF_NAMESPACE_ID::int32 reqid() const;
  void set_reqid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_reqid() const;
  void _internal_set_reqid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.AccountSummaryRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr group_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tags_;
  ::PROTOBUF_NAMESPACE_ID::int32 reqid_;
  friend struct ::TableStruct_AccountSummaryRequest_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AccountSummaryRequest

// int32 reqId = 1;
inline bool AccountSummaryRequest::_internal_has_reqid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool AccountSummaryRequest::has_reqid() const {
  return _internal_has_reqid();
}
inline void AccountSummaryRequest::clear_reqid() {
  reqid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AccountSummaryRequest::_internal_reqid() const {
  return reqid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AccountSummaryRequest::reqid() const {
  // @@protoc_insertion_point(field_get:protobuf.AccountSummaryRequest.reqId)
  return _internal_reqid();
}
inline void AccountSummaryRequest::_internal_set_reqid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  reqid_ = value;
}
inline void AccountSummaryRequest::set_reqid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_reqid(value);
  // @@protoc_insertion_point(field_set:protobuf.AccountSummaryRequest.reqId)
}

// string group = 2;
inline bool AccountSummaryRequest::_internal_has_group() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool AccountSummaryRequest::has_group() const {
  return _internal_has_group();
}
inline void AccountSummaryRequest::clear_group() {
  group_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& AccountSummaryRequest::group() const {
  // @@protoc_insertion_point(field_get:protobuf.AccountSummaryRequest.group)
  return _internal_group();
}
inline void AccountSummaryRequest::set_group(const std::string& value) {
  _internal_set_group(value);
  // @@protoc_insertion_point(field_set:protobuf.AccountSummaryRequest.group)
}
inline std::string* AccountSummaryRequest::mutable_group() {
  // @@protoc_insertion_point(field_mutable:protobuf.AccountSummaryRequest.group)
  return _internal_mutable_group();
}
inline const std::string& AccountSummaryRequest::_internal_group() const {
  return group_.Get();
}
inline void AccountSummaryRequest::_internal_set_group(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  group_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void AccountSummaryRequest::set_group(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  group_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:protobuf.AccountSummaryRequest.group)
}
inline void AccountSummaryRequest::set_group(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  group_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:protobuf.AccountSummaryRequest.group)
}
inline void AccountSummaryRequest::set_group(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  group_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:protobuf.AccountSummaryRequest.group)
}
inline std::string* AccountSummaryRequest::_internal_mutable_group() {
  _has_bits_[0] |= 0x00000001u;
  return group_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* AccountSummaryRequest::release_group() {
  // @@protoc_insertion_point(field_release:protobuf.AccountSummaryRequest.group)
  if (!_internal_has_group()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return group_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AccountSummaryRequest::set_allocated_group(std::string* group) {
  if (group != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  group_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), group,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:protobuf.AccountSummaryRequest.group)
}
inline std::string* AccountSummaryRequest::unsafe_arena_release_group() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.AccountSummaryRequest.group)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return group_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void AccountSummaryRequest::unsafe_arena_set_allocated_group(
    std::string* group) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (group != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  group_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      group, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.AccountSummaryRequest.group)
}

// string tags = 3;
inline bool AccountSummaryRequest::_internal_has_tags() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool AccountSummaryRequest::has_tags() const {
  return _internal_has_tags();
}
inline void AccountSummaryRequest::clear_tags() {
  tags_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& AccountSummaryRequest::tags() const {
  // @@protoc_insertion_point(field_get:protobuf.AccountSummaryRequest.tags)
  return _internal_tags();
}
inline void AccountSummaryRequest::set_tags(const std::string& value) {
  _internal_set_tags(value);
  // @@protoc_insertion_point(field_set:protobuf.AccountSummaryRequest.tags)
}
inline std::string* AccountSummaryRequest::mutable_tags() {
  // @@protoc_insertion_point(field_mutable:protobuf.AccountSummaryRequest.tags)
  return _internal_mutable_tags();
}
inline const std::string& AccountSummaryRequest::_internal_tags() const {
  return tags_.Get();
}
inline void AccountSummaryRequest::_internal_set_tags(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  tags_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void AccountSummaryRequest::set_tags(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  tags_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:protobuf.AccountSummaryRequest.tags)
}
inline void AccountSummaryRequest::set_tags(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  tags_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:protobuf.AccountSummaryRequest.tags)
}
inline void AccountSummaryRequest::set_tags(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  tags_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:protobuf.AccountSummaryRequest.tags)
}
inline std::string* AccountSummaryRequest::_internal_mutable_tags() {
  _has_bits_[0] |= 0x00000002u;
  return tags_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* AccountSummaryRequest::release_tags() {
  // @@protoc_insertion_point(field_release:protobuf.AccountSummaryRequest.tags)
  if (!_internal_has_tags()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return tags_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AccountSummaryRequest::set_allocated_tags(std::string* tags) {
  if (tags != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  tags_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tags,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:protobuf.AccountSummaryRequest.tags)
}
inline std::string* AccountSummaryRequest::unsafe_arena_release_tags() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.AccountSummaryRequest.tags)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return tags_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void AccountSummaryRequest::unsafe_arena_set_allocated_tags(
    std::string* tags) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (tags != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  tags_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      tags, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.AccountSummaryRequest.tags)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_AccountSummaryRequest_2eproto
